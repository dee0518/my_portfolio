{"version":3,"sources":["assets/ImportImages.js","assets/image/portfolio sync nonrecursive /.(png|jpe?g|svg)$","assets/image/portfolio/bg_piece.svg","assets/image/portfolio/history_one.svg","assets/image/portfolio/home.svg","assets/image/portfolio/list_card_off.svg","assets/image/portfolio/list_card_on.svg","assets/image/portfolio/list_table_off.svg","assets/image/portfolio/list_table_on.svg","assets/image/portfolio/logo.svg","assets/image/portfolio/mail.svg","assets/image/portfolio/phone.svg","assets/image/portfolio/project.svg","assets/image/portfolio/resume.svg","assets/image/chatbot sync nonrecursive /.(png|jpe?g|svg)$","assets/image/chatbot/arrow.svg","assets/image/chatbot/chatbot.svg","assets/image/chatbot/poster.jpg","assets/image/chatbot/poster2.jpg","assets/image/chatbot/poster3.jpg","assets/image/chatbot/poster4.jpg","utils/Utils.js","modules/Box/index.js","modules/H1/index.js","modules/Paragraph/index.js","modules/Button/index.js","modules/Span/index.js","modules/Image/index.js","projects/portfolio/container/Main/presenter/Introduce.js","projects/portfolio/container/Main/presenter/TheLatestItem.js","projects/portfolio/container/Main/presenter/TheLatestList.js","projects/portfolio/container/Main/presenter/MyMainView.js","projects/portfolio/LatestList/index.js","projects/portfolio/container/Main/index.js","projects/portfolio/templates/ContentView/index.js","projects/portfolio/templates/Menu/index.js","projects/portfolio/templates/PageTopForm/index.js","projects/portfolio/templates/ListTitleForm/index.js","projects/portfolio/container/ProjectDetail/presenter/HistoryItem.js","projects/portfolio/container/ProjectDetail/presenter/ProjectDetailView.js","projects/portfolio/container/ProjectDetail/index.js","projects/chatbot/virtualData/MovieList.js","projects/chatbot/templates/Chat/index.js","projects/chatbot/templates/OptionButton/index.js","projects/chatbot/templates/MovieSchedule/index.js","projects/chatbot/templates/SeatTable/index.js","projects/chatbot/templates/ReservationDetail/index.js","projects/chatbot/container/Main/presenter/MainView.js","projects/chatbot/Step/index.js","projects/chatbot/container/Main/index.js","App.js","navigation/CONSTANTS.js","reportWebVitals.js","index.js"],"names":["importAll","r","images","keys","map","item","index","replace","default","portfolioImages","require","chatbotImages","exports","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","Object","resolve","module","weekDayInKor","yyyy_mm_dd_dot","date","x","y","getFullYear","toString","m","getMonth","d","getDate","length","mm_dd_dot","hh_mm_ss","h","getHours","getMinutes","s","getSeconds","hh_mm","getDayInKorean","day","getDay","hh_mm_am_pm","yyyy_mm_dd_hh_mm_ss_dot","time","Date","mm_dd_dot_day","day_hh_mm","weekDayInEng","getQueryVariable","variable","vars","window","location","search","substring","split","i","pair","decodeURIComponent","console","log","Box","props","boxClass","children","className","H1","h1Class","Paragraph","pClass","Button","buttonClass","value","type","onClick","Span","spanClass","Image","imgClass","imgSource","imgTitle","src","alt","Introduce","title","text","TheLatestItem","status","content","to","PROJECT","TheLatestList","listType","lists","onClickBtn","createdAt","MyMainView","useState","setListType","loadStatusClass","viewClass","val","latestList","description","updatedAt","url","history","MyMainContainer","ContentView","Menu","PageTopForm","ListTitleForm","HistoryItem","ProjectDetailView","project","ProjectDetailContainer","useParams","filter","MovieList","startDate","lastDate","times","Chat","message","OptionButton","options","onClickOptionButton","class","label","MovieItem","selectedMovieTime","btnClass","includes","MovieSchedule","selectedDate","movieList","onClickDateBtn","onClickMovieTimeBtn","SeatRow","rowNum","selectedSeat","number","seatNum","SeatTable","peopleNum","seatList","onClickPeopleNumBtn","num","onClickSelectedSeat","ReservationDetail","movieInfo","seatInfo","utils","MainView","Steps","steps","setSteps","renderedSteps","setRenderedSteps","previousSteps","setPreviousSteps","currentStep","setCurrentStep","today","setToday","setSelectedDate","setSelectedMovieTime","setPeopleNum","setSelectedSeat","onSetChatbotState","child","RefId","splitGroup","Number","lastIndex","triggerValue","trigger","callback","selectedSeatList","year","currentDate","changeDate","setDate","setNewday","newToday","afterThreeDate","chageAfterDate","newPeopleNum","indexOf","useEffect","renderedStepsLength","previousStepsLength","setTimeout","scrollTo","top","document","body","scrollHeight","left","behavior","MainContainer","App","exact","path","component","Main","ProjectDetail","Chatbot","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.62ab3351.chunk.js","sourcesContent":["function importAll(r) {\r\n    let images = {};\r\n    r.keys().map((item, index) => { \r\n        images[item.replace('./', '')] = r(item).default; \r\n\r\n        return item\r\n    });\r\n    \r\n    return images;\r\n}\r\n\r\nconst portfolioImages = importAll(require.context('./image/portfolio', false, /\\.(png|jpe?g|svg)$/));\r\nconst chatbotImages = importAll(require.context('./image/chatbot', false, /\\.(png|jpe?g|svg)$/));\r\n\r\n\r\nexports.portfolioImages = portfolioImages\r\nexports.chatbotImages = chatbotImages","var map = {\n\t\"./bg_piece.svg\": 39,\n\t\"./history_one.svg\": 40,\n\t\"./home.svg\": 41,\n\t\"./list_card_off.svg\": 42,\n\t\"./list_card_on.svg\": 43,\n\t\"./list_table_off.svg\": 44,\n\t\"./list_table_on.svg\": 45,\n\t\"./logo.svg\": 46,\n\t\"./mail.svg\": 47,\n\t\"./phone.svg\": 48,\n\t\"./project.svg\": 49,\n\t\"./resume.svg\": 50\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 38;","export default __webpack_public_path__ + \"static/media/bg_piece.9f7503ac.svg\";","export default __webpack_public_path__ + \"static/media/history_one.619231e3.svg\";","export default __webpack_public_path__ + \"static/media/home.90000f39.svg\";","export default __webpack_public_path__ + \"static/media/list_card_off.9319c1c0.svg\";","export default __webpack_public_path__ + \"static/media/list_card_on.35409619.svg\";","export default __webpack_public_path__ + \"static/media/list_table_off.6731b13a.svg\";","export default __webpack_public_path__ + \"static/media/list_table_on.3605ad57.svg\";","export default __webpack_public_path__ + \"static/media/logo.49283d29.svg\";","export default __webpack_public_path__ + \"static/media/mail.8ee49148.svg\";","export default __webpack_public_path__ + \"static/media/phone.5268b9e9.svg\";","export default __webpack_public_path__ + \"static/media/project.7421760d.svg\";","export default __webpack_public_path__ + \"static/media/resume.dfe3a8ac.svg\";","var map = {\n\t\"./arrow.svg\": 52,\n\t\"./chatbot.svg\": 53,\n\t\"./poster.jpg\": 54,\n\t\"./poster2.jpg\": 55,\n\t\"./poster3.jpg\": 56,\n\t\"./poster4.jpg\": 57\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 51;","export default __webpack_public_path__ + \"static/media/arrow.bfc4718d.svg\";","export default __webpack_public_path__ + \"static/media/chatbot.3383d84a.svg\";","export default __webpack_public_path__ + \"static/media/poster.f6c31a2a.jpg\";","export default __webpack_public_path__ + \"static/media/poster2.c582b76c.jpg\";","export default __webpack_public_path__ + \"static/media/poster3.66cb720b.jpg\";","export default __webpack_public_path__ + \"static/media/poster4.16da8b71.jpg\";","let month = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\", \"Sep\",\"Oct\",\"Nov\",\"Dec\"]\r\nlet weekDayInKor = ['일', '월', '화', '수', '목', '금', '토'];\r\nlet weekDayInEng = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n// \r\nfunction yyyy_mm_dd_dot(date) {\r\n    var x = date;\r\n    var y = x.getFullYear().toString();\r\n    var m = (x.getMonth() + 1).toString();\r\n    var d = x.getDate().toString();\r\n    (d.length === 1) && (d = '0' + d);\r\n    (m.length === 1) && (m = '0' + m);\r\n    var yyyymmdd = y + \".\" + m + \".\" + d;\r\n    return yyyymmdd;\r\n}\r\n\r\nfunction mm_dd_dot(date) {\r\n    var x = date;\r\n    var m = (x.getMonth() + 1).toString();\r\n    var d = x.getDate().toString();\r\n    (d.length === 1) && (d = '0' + d);\r\n    (m.length === 1) && (m = '0' + m);\r\n    var mmdd = m + \".\" + d;\r\n    return mmdd;\r\n}\r\n\r\nfunction hh_mm_ss(date) {\r\n    var x = date;\r\n    var h = x.getHours().toString();\r\n    var m = x.getMinutes().toString();\r\n    var s = x.getSeconds().toString();\r\n    (h.length === 1) && (h = '0' + h);\r\n    (s.length === 1) && (s = '0' + s);\r\n    (m.length === 1) && (m = '0' + m);\r\n    var hhmmss = h + \":\" + m + \":\" + s;\r\n    return hhmmss;\r\n}\r\n\r\nfunction hh_mm(date) {\r\n    var x = date;\r\n    var h = x.getHours().toString();\r\n    var m = x.getMinutes().toString();\r\n    (h.length === 1) && (h = '0' + h);\r\n    (m.length === 1) && (m = '0' + m);\r\n    var hhmm = h + \":\" + m ;\r\n    return hhmm;\r\n}\r\n\r\nfunction hh_mm_am_pm(date) {\r\n    var x = date;\r\n    var h = x.getHours() > 12 ? x.getHours() - 12 : x.getHours();\r\n    var am_pm = date.getHours() >= 12 ? \"오후\" : \"오전\";\r\n    h = h < 10 ? \"0\" + h : h;\r\n    var m = x.getMinutes() < 10 ? \"0\" + x.getMinutes() : x.getMinutes();\r\n    var hhmm = am_pm + \" \" + h + \":\" + m;\r\n\r\n    return hhmm;\r\n}\r\n\r\nfunction getDayInKorean(date) {\r\n    let day = date.getDay()\r\n\r\n    return weekDayInKor[day]\r\n}\r\n\r\nfunction yyyy_mm_dd_hh_mm_ss_dot(time){\r\n  let date = new Date(time);\r\n  let dayString = yyyy_mm_dd_dot(date);\r\n  let timeString = hh_mm_ss(date);\r\n  return dayString + \" \" + timeString;\r\n}\r\n\r\nfunction mm_dd_dot_day(time){\r\n    let date = new Date(time);\r\n    let dateString = mm_dd_dot(date);\r\n    let dayString = getDayInKorean(date)\r\n\r\n    return dateString + ' ' + dayString;\r\n}\r\n\r\nfunction day_hh_mm(time){\r\n    let date = new Date(time);\r\n    let dayString = getDayInKorean(date)\r\n    let timeString = hh_mm(date);\r\n\r\n    return dayString + ' ' + timeString;\r\n}\r\n\r\nfunction getQueryVariable(variable){\r\n  var query = window.location.search.substring(1);\r\n  var vars = query.split('&');\r\n  for (var i = 0; i < vars.length; i++) {\r\n      var pair = vars[i].split('=');\r\n      if (decodeURIComponent(pair[0]) === variable) {\r\n          return decodeURIComponent(pair[1]);\r\n      }\r\n  }\r\n  console.log('Query variable %s not found', variable);\r\n  return null;\r\n}\r\n\r\nexports.yyyy_mm_dd_dot = yyyy_mm_dd_dot;\r\nexports.mm_dd_dot= mm_dd_dot;\r\nexports.hh_mm_ss = hh_mm_ss;\r\nexports.hh_mm = hh_mm;\r\nexports.hh_mm_am_pm = hh_mm_am_pm;\r\nexports.yyyy_mm_dd_hh_mm_ss_dot = yyyy_mm_dd_hh_mm_ss_dot;\r\nexports.mm_dd_dot_day = mm_dd_dot_day\r\nexports.day_hh_mm = day_hh_mm;\r\nexports.weekDayInKor = weekDayInKor;\r\nexports.weekDayInEng = weekDayInEng;\r\nexports.getQueryVariable = getQueryVariable;","function Box(props) {\r\n    const { boxClass, children } = props\r\n\r\n    return (\r\n        <div className={boxClass || ''}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Box","function H1(props) {\r\n    const { h1Class, children } = props\r\n\r\n    return (\r\n        <h1 className={h1Class || ''}>\r\n            {children}\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default H1","function Paragraph(props) {\r\n    const { pClass, children } = props\r\n\r\n    return (\r\n        <p className={pClass || ''}>\r\n            {children}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Paragraph","function Button(props) {\r\n    const { buttonClass, children, value } = props\r\n\r\n    const onClick = () => {\r\n        props.onClick(value)\r\n    }\r\n\r\n    return (\r\n        <button type=\"button\" className={buttonClass || ''} onClick={() => onClick()}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","function Span(props) {\r\n    const { spanClass, children } = props\r\n\r\n    return (\r\n        <span className={spanClass || ''}>\r\n            {children}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Span","function Image(props) {\r\n    const { imgClass, imgSource, imgTitle } = props\r\n\r\n    return (\r\n        <img className={imgClass || ''} src={imgSource} alt={imgTitle}/>\r\n    )\r\n}\r\n\r\nexport default Image","import { Box, Span, PageTopForm } from '../../../../../Path'\r\n\r\nfunction Introduce(){\r\n    const title = <Span>Doeun's <Span spanClass=\"bg\">Portfolio</Span></Span>\r\n    const text = <Span>Hello! My name is Doeun, Hwang. My Portfolio consists mainly of the React projects.<Span>You can see my projects. if you want to contact me, please contact me at the email or phone.</Span></Span>\r\n\r\n    return (\r\n        <Box boxClass={'introduce-wrap'}>\r\n            <PageTopForm\r\n                title={title}\r\n                text={text}\r\n            />\r\n            <Box boxClass=\"email\">dehya0518@naver.com</Box>\r\n            <Box boxClass=\"phone\">010.8939.5018</Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Introduce","import { Box } from '../../../../../Path'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// navigation\r\nimport { PROJECT } from '../../../../../navigation/CONSTANTS'\r\n\r\nfunction TheLatestItem(props){\r\n    const { id, status, title, content, date } = props\r\n\r\n    return (\r\n        <Link className=\"list-item\" to={PROJECT + '/' + id}>\r\n            <Box boxClass=\"status\">{status}</Box>\r\n            <Box boxClass=\"title\">{title}</Box>\r\n            <Box boxClass=\"content\">{content}</Box>\r\n            <Box boxClass=\"date-alarm\">{date}</Box>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default TheLatestItem","import { Box, Button, ListTitleForm } from '../../../../../Path'\r\nimport TheLatestItem from './TheLatestItem'\r\n\r\nfunction TheLatestList(props){\r\n    const { listType, lists } = props\r\n\r\n    const onClickBtn = (value) => {\r\n        props.onClickBtn(value)\r\n    }\r\n\r\n    return (\r\n        <Box boxClass={'list-wrap'}>\r\n            <ListTitleForm title={'The Latest'}>\r\n                <Box boxClass={'right-layout'}>\r\n                    <Button\r\n                        buttonClass={listType === 'card'? 'type-btn on' : 'type-btn'}\r\n                        value={'card'}\r\n                        children={'card'}\r\n                        onClick={onClickBtn}\r\n                    />\r\n                    <Button\r\n                        buttonClass={listType === 'table'? 'type-btn on' : 'type-btn'}\r\n                        value={'table'}\r\n                        children={'table'}\r\n                        onClick={onClickBtn}\r\n                    />\r\n                </Box>\r\n            </ListTitleForm>\r\n            <Box boxClass={'list-contents ' + listType}>\r\n                {\r\n                    lists.length > 0 && lists.map((item) => {\r\n                        return <TheLatestItem\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            status={item.status} \r\n                            title={item.title} \r\n                            content={item.content} \r\n                            date={item.createdAt}\r\n                        />\r\n                    })\r\n                }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TheLatestList","import { useState } from 'react'\r\n\r\n// component\r\nimport { Box, Menu, ContentView } from '../../../../../Path'\r\nimport Introduce from './Introduce'\r\nimport TheLatestList from './TheLatestList'\r\n\r\n// css\r\nimport './index.css'\r\n\r\nfunction MyMainView(props){\r\n    const { lists } = props\r\n    const [listType, setListType] = useState('card')\r\n    const [loadStatusClass, setLoadStatusClass] = useState('end-ani')\r\n\r\n    const onClickListTypeBtn = (val) => {\r\n        setListType(val)\r\n    }\r\n\r\n    return (\r\n        <Box boxClass=\"main-wrap\">\r\n            <Menu loadStatusClass={loadStatusClass}/>\r\n            <ContentView viewClass={''}>\r\n                <Introduce/>\r\n                <TheLatestList\r\n                    listType={listType}\r\n                    lists={lists}\r\n                    onClickBtn={onClickListTypeBtn}\r\n                />\r\n            </ContentView>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MyMainView","import { Span } from '../../../Path'\r\n\r\nconst latestList = [,{\r\n    id: 1,\r\n    status: 'Draft',\r\n    title: 'Chatbot',\r\n    content: '영화 예매 및 좌석을 선택하는 챗봇',\r\n    description : '간단한 프로세스을 통해 영화 시간 및 좌석을 선택하여 영화를 예매할 수 있는 챗봇 프로젝트입니다.',\r\n    createdAt: '2021-12-03',\r\n    updatedAt: '2021-12-03',\r\n    url: '/chatbot',\r\n    history: [{\r\n        id: 1,\r\n        content: 'chatbot프로젝트 초안 업로드',\r\n        createdAt: '2021-12-03'\r\n    }]\r\n}]\r\n\r\nexport default latestList","import MyMainView from './presenter/MyMainView'\r\n\r\n// data\r\nimport latestList from '../../LatestList'\r\n\r\nfunction MyMainContainer(){\r\n    return (\r\n        <MyMainView lists={latestList}/>\r\n    )\r\n}\r\n\r\nexport default MyMainContainer","import { Box } from '../../../../Path'\r\nimport './index.css'\r\n\r\nfunction ContentView(props){\r\n    const { viewClass, children } = props\r\n    return (\r\n        <Box boxClass={'content-view-wrap ' + viewClass}>\r\n            {children}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ContentView","import { Link } from 'react-router-dom'\r\n\r\nimport { Box, Image, H1, Span } from '../../../../Path'\r\nimport { MAIN, RESUME, PROJECT } from '../../../../navigation/CONSTANTS'\r\n\r\n// image\r\nimport { portfolioImages } from '../../../../assets/ImportImages'\r\n\r\n// css\r\nimport './index.css'\r\n\r\nfunction Menu(props){\r\n    const { loadStatusClass } = props\r\n\r\n    return (\r\n        <Box boxClass={'main-menu'}>\r\n            <Box boxClass={'loader ' + loadStatusClass}>\r\n                <H1 h1Class={'logo'}>\r\n                    <Image \r\n                        imgClass={'logo-icon'} \r\n                        imgSource={portfolioImages['logo.svg']} \r\n                        imgTitle={\"doeun's logo\"}\r\n                    />\r\n                </H1>\r\n            </Box>\r\n            {/* <Link to={MAIN}>\r\n                <Span>메인으로 이동</Span>\r\n                <Image \r\n                    imgClass={'menu-icon'} \r\n                    imgSource={portfolioImages['home.svg']} \r\n                    imgTitle={'home'}\r\n                />\r\n            </Link>\r\n            <Link to={RESUME}>\r\n                <Span>이력서로 이동</Span>\r\n                <Image \r\n                    imgClass={'menu-icon'} \r\n                    imgSource={portfolioImages['resume.svg']} \r\n                    imgTitle={'resume'}\r\n                />\r\n            </Link>\r\n            <Link to={PROJECT}>\r\n                <Span>프로젝트로 이동</Span>\r\n                <Image \r\n                    imgClass={'menu-icon'} \r\n                    imgSource={portfolioImages['project.svg']} \r\n                    imgTitle={'project'}\r\n                />\r\n            </Link> */}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Menu","import { Box, Paragraph } from '../../../../Path'\r\nimport './index.css'\r\n\r\nfunction PageTopForm(props){\r\n    const { title, text } = props\r\n\r\n    return (\r\n        <Box boxClass={'page-top-form'}>\r\n            <Box boxClass={'page-top-form-title'}>{title}</Box>\r\n            <Paragraph pClass={'page-top-form-text'}>{text}</Paragraph>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PageTopForm","import { Box } from '../../../../Path'\r\nimport './index.css'\r\n\r\nfunction ListTitleForm(props){\r\n    const { title, children } = props\r\n\r\n    return (\r\n        <Box boxClass={'list-title-form'}>\r\n            <Box boxClass={'list-title'}>{title}</Box>\r\n            {children}\r\n        </Box>\r\n    ) \r\n}\r\n\r\nexport default ListTitleForm","import { Box } from '../../../../../Path'\r\n\r\nfunction HistoryItem(props){\r\n    const { content, date } = props\r\n\r\n    return (\r\n        <Box boxClass={\"history-item \"}>\r\n            <Box boxClass=\"content\">{content}</Box>\r\n            <Box boxClass=\"date\">{date}</Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default HistoryItem","import { Link } from 'react-router-dom'\r\n\r\n// component\r\nimport { Box, ContentView, Menu, PageTopForm, ListTitleForm } from '../../../../../Path'\r\nimport HistoryItem from './HistoryItem'\r\n\r\n// css\r\nimport './index.css'\r\n\r\nfunction ProjectDetailView(props){\r\n    const { project } = props\r\n    \r\n    return (\r\n        <Box boxClass=\"project-detail-wrap\">\r\n            <Menu loadStatusClass=\"end-ani\"/>\r\n            <ContentView viewClass={''}>\r\n                <PageTopForm\r\n                    title={project.title}\r\n                    text={project.description}\r\n                />\r\n                <Link className=\"url-btn\" to={project.url}>웹사이트로 이동</Link>\r\n                <ListTitleForm\r\n                    title={'History'}\r\n                    children={''}\r\n                />\r\n                <Box boxClass={'history-table'}>\r\n                    {\r\n                        project.history.length > 0 && project.history.map((item) => {\r\n                            return (\r\n                                <HistoryItem\r\n                                    key={item.id}\r\n                                    content={item.content}\r\n                                    date={item.createdAt}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </ContentView>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProjectDetailView","import { useParams } from \"react-router\"\r\nimport ProjectDetailView from \"./presenter/ProjectDetailView\"\r\n\r\n// data\r\nimport latestList from \"../../LatestList\"\r\n\r\nfunction ProjectDetailContainer(){\r\n    const { id } = useParams()\r\n    const project = latestList.filter(item => item.id == id)[0]\r\n\r\n    return (\r\n        <ProjectDetailView project={project}/>\r\n    )\r\n}\r\n\r\nexport default ProjectDetailContainer","const MovieList = [{\r\n    title: '기적',\r\n    startDate: '2021-10-9',\r\n    lastDate: '2021-11-20',\r\n    times: ['08:30 - 10:55','11:30 - 13:50','14:00 - 15:55','17:30 - 19:45','20:30 - 22:35']\r\n},{\r\n    title: '어벤져스',\r\n    startDate: '2021-10-13',\r\n    lastDate: '2021-10-20',\r\n    times: ['08:30 - 10:55','11:30 - 13:50','14:00 - 15:55','17:30 - 19:45','20:30 - 22:35']\r\n},{\r\n    title: '겨울왕국',\r\n    startDate: '2021-10-11',\r\n    lastDate: '2021-11-20',\r\n    times: ['08:30 - 10:55','11:30 - 13:50','14:00 - 15:55','17:30 - 19:45','20:30 - 22:35']\r\n},{\r\n    title: '터미널',\r\n    startDate: '2021-10-14',\r\n    lastDate: '2021-11-20',\r\n    times: ['08:30 - 10:55','11:30 - 13:50','14:00 - 15:55','17:30 - 19:45','20:30 - 22:35']\r\n},{\r\n    title: '극한직업',\r\n    startDate: '2021-10-18',\r\n    lastDate: '2021-11-20',\r\n    times: ['08:30 - 10:55','11:30 - 13:50','14:00 - 15:55','17:30 - 19:45','20:30 - 22:35']\r\n}]\r\n\r\nexport default MovieList","// component\r\nimport { Box } from '../../../../Path'\r\n\r\n// css\r\nimport './index.css'\r\n\r\nfunction Chat(props){\r\n    const { type, message } = props\r\n\r\n    return (\r\n        <Box boxClass={'chatbot-' + type + ' chat'}>\r\n            {\r\n                type === 'question' && <Box boxClass=\"back-img\"></Box>\r\n            }\r\n            <Box boxClass=\"message\">\r\n                {message}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Chat","// component\r\nimport { Box, Button } from '../../../../Path'\r\n\r\n// css\r\nimport './index.css'\r\n\r\nfunction OptionButton(props){\r\n    const { options } = props\r\n\r\n    const onClick = (value) => {\r\n        props.onClickOptionButton(value)\r\n    }\r\n\r\n    return (\r\n        <Box boxClass={'option-button-group'}>\r\n            {\r\n                options.length > 0 && options.map((item,index) => {\r\n                    return (\r\n                        <Button\r\n                            key={'ob'+index}\r\n                            buttonClass={item.class} \r\n                            children={item.label} \r\n                            value={index}\r\n                            onClick={onClick}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default OptionButton","// component\r\nimport { Box, Button, Span, Image } from '../../../../Path'\r\n\r\n// css\r\nimport './index.css'\r\n\r\n// img\r\nimport { chatbotImages } from '../../../../assets/ImportImages'\r\n\r\nfunction MovieSchedule(props){\r\n    const { selectedDate, selectedMovieTime, movieList } = props\r\n\r\n    // date 변경\r\n    const onClickDateBtn = (date) => {\r\n        props.onClickDateBtn(date)\r\n    }\r\n\r\n    // 영화 & 영화시간 변경\r\n    const onClickMovieTimeBtn = (time) => {\r\n        props.onClickMovieTimeBtn(time)\r\n    }\r\n\r\n    return (\r\n        <Box boxClass={'movie-schedule'}>\r\n            <Box boxClass={'top'}>\r\n                <Button buttonClass={'prev-btn'} onClick={onClickDateBtn} value={'-1'}>\r\n                    <Image\r\n                        imgSource={chatbotImages['arrow.svg']}\r\n                        imgTitle={'이전'}\r\n                    />\r\n                </Button>\r\n                <Span>{selectedDate}</Span>\r\n                <Button buttonClass={'next-btn'} onClick={onClickDateBtn} value={'1'}>\r\n                <Image\r\n                        imgSource={chatbotImages['arrow.svg']}\r\n                        imgTitle={'다음'}\r\n                    />\r\n                </Button>\r\n            </Box>\r\n            <Box boxClass={'movie-list'}>\r\n                {\r\n                    movieList.length > 0 && movieList.map((item,index) => {\r\n                        return (\r\n                            <MovieItem\r\n                                key={'movie'+ index}\r\n                                title={item.title}\r\n                                times={item.times}\r\n                                selectedMovieTime={selectedMovieTime}\r\n                                onClick={onClickMovieTimeBtn}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction MovieItem(props){\r\n    const { title, times, selectedMovieTime } = props\r\n\r\n    const onClick = (value) => {\r\n        props.onClick(value)\r\n    }\r\n\r\n    return (\r\n        <Box boxClass={'movie-item'}>\r\n            <Box boxClass={'movie-title'}>{title}</Box>\r\n            <Box boxClass={'movie-time-list'}>\r\n                {\r\n                    times.length > 0 && times.map((time,index) => {\r\n                        let btnClass = ''\r\n\r\n                        if(selectedMovieTime.includes(title) && selectedMovieTime.includes(time)){\r\n                            btnClass = 'selected'\r\n                        }\r\n\r\n                        return (\r\n                            <Button\r\n                                key={'time'+index}\r\n                                buttonClass={btnClass}\r\n                                children={time}\r\n                                value={title + '_' + time}\r\n                                onClick={onClick}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MovieSchedule","// component\r\nimport { Box, Button, Span, Image } from '../../../../Path'\r\n\r\n// css\r\nimport './index.css'\r\n\r\n// img\r\nimport { chatbotImages } from '../../../../assets/ImportImages'\r\n\r\nfunction SeatTable(props){\r\n    const { peopleNum, seatList, selectedSeat } = props\r\n\r\n    const onClickPeopleNumBtn = (num) => {\r\n        props.onClickPeopleNumBtn(num)\r\n    }\r\n\r\n    const onClickSelectedSeat = (seatNum) => {\r\n        props.onClickSelectedSeat(seatNum)\r\n    }\r\n\r\n    return (\r\n        <Box boxClass={'seat-table-wrap'}>\r\n            <Box boxClass={'people'}>\r\n                <Box boxClass={'people-title'}>인원</Box>\r\n                <Box boxClass={'num-wrap'}>\r\n                    <Button buttonClass={'minus-btn'} onClick={onClickPeopleNumBtn} value={'-1'}>-</Button>\r\n                    <Span>{peopleNum}</Span>\r\n                    <Button buttonClass={'puls-btn'} onClick={onClickPeopleNumBtn} value={'1'}>+</Button>\r\n                </Box>\r\n            </Box>\r\n            <Box boxClass={'seat-wrap'}>\r\n                <Box boxClass={'screen'}>screen</Box>\r\n                <Box boxClass={'all-seat'}>\r\n                    {\r\n                        seatList.length > 0 && seatList.map((item,index) => {\r\n                            return (\r\n                                <SeatRow\r\n                                    key={'row' + index}\r\n                                    rowNum={item}\r\n                                    selectedSeat={selectedSeat}\r\n                                    onClick={onClickSelectedSeat}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction SeatRow(props){\r\n    const { rowNum, selectedSeat } = props\r\n\r\n    const columns = [1,2,3,4,5,6,7]\r\n\r\n    const onClick = (number) => {\r\n        props.onClick(number)\r\n    }\r\n\r\n    return (\r\n        <Box boxClass={'seat-row'}>\r\n            <Span>{rowNum}</Span>\r\n            {\r\n                columns.map((item,index) => {\r\n                    let btnClass = ''\r\n                    let seatNum = rowNum + item\r\n\r\n                    if(selectedSeat.includes(seatNum)){\r\n                        btnClass = 'selected'\r\n                    }\r\n\r\n                    return (\r\n                        <Button\r\n                            key={'seat' + index}\r\n                            buttonClass={btnClass}\r\n                            value={seatNum}\r\n                            children={seatNum}\r\n                            onClick={onClick}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SeatTable","// component\r\nimport { Box, Span } from '../../../../Path'\r\n\r\n// css\r\nimport './index.css'\r\n\r\nfunction ReservationDetail(props){\r\n    const { movieInfo ,seatInfo } = props\r\n\r\n    return (\r\n        <Box boxClass={'reserv-detail-wrap'}>\r\n            <Box boxClass={'image-wrap'}></Box>\r\n            <Box boxClass={'info-wrap'}>\r\n                <Box boxClass={'movie-info'}>\r\n                    <Span spanClass={'movie-info-title'}>{movieInfo.split('_')[0]}</Span>\r\n                    <Span spanClass={'movie-info-time'}>{movieInfo.split('_')[1]}</Span>\r\n                </Box>\r\n                <Box boxClass={'seat-info'}>\r\n                    {\r\n                        seatInfo.map((item,index) => {\r\n                            if(index === 0){\r\n                                return item\r\n                            }\r\n                            else {\r\n                                return ', ' + item\r\n                            }\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ReservationDetail","import { useState, useEffect } from \"react\"\r\n\r\n// css\r\nimport './index.css'\r\n\r\n// data\r\nimport MovieList from \"../../../virtualData/MovieList\"\r\n\r\n// component\r\nimport { Box } from '../../../../../Path'\r\nimport Chat from '../../../templates/Chat'\r\nimport OptionButton from '../../../templates/OptionButton'\r\nimport MovieSchedule from '../../../templates/MovieSchedule'\r\nimport SeatTable from \"../../../templates/SeatTable\"\r\nimport ReservationDetail from \"../../../templates/ReservationDetail\"\r\n\r\n// utils\r\nconst utils = require('../../../../../utils/Utils')\r\n\r\nfunction MainView(props){\r\n    const { Steps } = props\r\n\r\n    // STEP\r\n    const [steps,setSteps] = useState(Steps)\r\n    const [renderedSteps,setRenderedSteps] = useState([])\r\n    const [previousSteps,setPreviousSteps] = useState([])\r\n    const [currentStep,setCurrentStep] = useState()\r\n\r\n    // 티켓 예매관련 정보\r\n    const today = new Date()\r\n    const setToday = utils.mm_dd_dot(today) + ' ('+ utils.weekDayInEng[today.getDay()] +')'\r\n    const [selectedDate,setSelectedDate] = useState(setToday)\r\n    const [selectedMovieTime,setSelectedMovieTime] = useState('')\r\n    const [movieList, setMovieInfo] = useState(MovieList)\r\n    const [peopleNum,setPeopleNum] = useState(0)\r\n    const seatList = ['A','B','C','D','E','F']\r\n    const [selectedSeat,setSelectedSeat] = useState([])\r\n    \r\n    // id와 type값으로 renderedSteps에 요소를 추가하는 함수\r\n    const onSetChatbotState = (id, type) => {\r\n        setPreviousSteps(renderedSteps)\r\n        setCurrentStep(id)\r\n    \r\n        let child = ''\r\n    \r\n        steps.map((item) => {\r\n            if(item.id === id){\r\n                child = item\r\n            }\r\n    \r\n             return item\r\n        })\r\n        \r\n        if(type === 'add'){\r\n            setRenderedSteps([...renderedSteps, child])\r\n        }\r\n    \r\n        if(type.includes('delete')){\r\n            let RefId;\r\n\r\n            if(type === 'delete'){\r\n                RefId = renderedSteps.length - 1\r\n            }\r\n            else {\r\n                let splitGroup = type.split('_')\r\n                \r\n                RefId = Number(splitGroup[1]) + 1\r\n            }\r\n            \r\n            setRenderedSteps(renderedSteps.filter((item) => { \r\n                return item.id < RefId\r\n            })) \r\n        }  \r\n    }\r\n\r\n    // 옵션 버튼 클릭했을 경우\r\n    const onClickOptionButton = (value) => {\r\n        let lastIndex = renderedSteps.length - 1\r\n        let triggerValue  = renderedSteps[lastIndex].options[value].trigger\r\n        let callback = renderedSteps[lastIndex].options[value].callback\r\n        \r\n        if(callback === 'none'){\r\n            onSetChatbotState(triggerValue, 'delete')\r\n        }\r\n        else if(callback.includes('delete')){\r\n            if(currentStep === 8 && selectedMovieTime !== ''){\r\n                setSteps(steps.map((item) => {\r\n                    if(item.id === 9){\r\n                        return {...item, message: selectedDate}\r\n                    }\r\n                    else if(item.id === 10){\r\n                        let splitGroup = selectedMovieTime.split('_')\r\n\r\n                        return {...item, message: splitGroup[0] + ' ' + splitGroup[1]}\r\n                    }\r\n                    else {\r\n                        return item\r\n                    }\r\n                }))\r\n                onSetChatbotState(triggerValue, callback)\r\n            }\r\n\r\n            if(currentStep === 13){\r\n                if(value === 0 && selectedSeat.length > 0 && selectedSeat.length === peopleNum){\r\n                    let selectedSeatList = ''\r\n                    selectedSeat.map((item, index) => {\r\n                        if(index === 0){\r\n                            selectedSeatList += item\r\n                        }\r\n                        else {\r\n                            selectedSeatList += ', ' + item\r\n                        }\r\n                    })\r\n\r\n                    setSteps(steps.map((item) => {\r\n                        if(item.id === 14){\r\n                            return {...item, message: <Box>인원 : {peopleNum}명<Box>좌석 : {selectedSeatList}</Box></Box>}\r\n                        }\r\n                        else {\r\n                            return item\r\n                        }\r\n                    }))\r\n\r\n                    onSetChatbotState(triggerValue, callback)\r\n                }\r\n\r\n                if(value === 1) {\r\n                    setSelectedDate(setToday)\r\n                    setSelectedMovieTime('')\r\n                    onSetChatbotState(triggerValue, callback)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 날짜 및 영화리스트 변경\r\n    const onClickDateBtn = (date) => {\r\n        const year = today.getFullYear()\r\n        const currentDate = new Date(year + ' ' + selectedDate)\r\n        const changeDate = currentDate.getDate() + Number(date)\r\n        currentDate.setDate(changeDate)\r\n        const setNewday = utils.mm_dd_dot(currentDate) + ' ('+ utils.weekDayInEng[currentDate.getDay()] +')'\r\n\r\n        const newToday = new Date(year + ' ' + utils.mm_dd_dot(today))\r\n        const afterThreeDate = new Date(year + ' ' + utils.mm_dd_dot(today))\r\n        const chageAfterDate = afterThreeDate.getDate() + 3\r\n        afterThreeDate.setDate(chageAfterDate)\r\n        \r\n        // 오늘 날짜부터 3일 이후로만 검색되도록 기간 설정\r\n        if(currentDate >= newToday && currentDate <= afterThreeDate){\r\n            setSelectedDate(setNewday)\r\n        }  \r\n    }\r\n\r\n    // 선택한 영화와 시간 state값 설정\r\n    const onClickMovieTimeBtn = (time) => {\r\n        setSelectedMovieTime(time)\r\n    }\r\n\r\n    // 선택한 인원수 state값 변경\r\n    const onClickPeopleNumBtn = (num) => {\r\n        let newPeopleNum = peopleNum + Number(num)\r\n\r\n        if(newPeopleNum >= 0 && newPeopleNum <= 7){\r\n            setPeopleNum(newPeopleNum)\r\n        }\r\n    }\r\n\r\n    // 선택한 좌석 state값 변경\r\n    const onClickSelectedSeat = (seatNum) => {\r\n        if(peopleNum > 0){\r\n            if(selectedSeat.indexOf(seatNum) !== -1){\r\n                setSelectedSeat(selectedSeat.filter((item) => { return item !== seatNum }))\r\n            }\r\n            else {\r\n                if(selectedSeat.length < peopleNum){\r\n                    setSelectedSeat([...selectedSeat,seatNum])\r\n                }\r\n            } \r\n        }\r\n    }\r\n\r\n    // 처음 렌더\r\n    useEffect(() => {\r\n        if(renderedSteps.length === 0){\r\n            onSetChatbotState(0, 'add')\r\n        }\r\n    },[])\r\n\r\n    // 출력할 단계 생성\r\n    useEffect(() => {\r\n        if(renderedSteps.length > 0){\r\n          let lastIndex = renderedSteps.length - 1\r\n          let renderedStepsLength = renderedSteps.length\r\n          let previousStepsLength = previousSteps.length \r\n          \r\n          if(renderedSteps[lastIndex].trigger !== 'none'){\r\n            if(previousStepsLength < renderedStepsLength){\r\n              setTimeout(() => {\r\n                onSetChatbotState(renderedSteps[lastIndex].trigger, 'add')\r\n              },300) \r\n            }\r\n      \r\n            if(previousStepsLength > renderedStepsLength){\r\n              setTimeout(() => {\r\n                onSetChatbotState(currentStep, 'add')\r\n              },300) \r\n            }\r\n          }\r\n          else {\r\n            if(previousStepsLength > renderedStepsLength){\r\n              let lastIndex = renderedSteps.length - 1\r\n    \r\n              setRenderedSteps(renderedSteps.filter((item,index) => { return index !== lastIndex}))\r\n            }\r\n          }\r\n        }\r\n    \r\n        setTimeout(() => {\r\n          window.scrollTo({\r\n            top: document.body.scrollHeight, \r\n            left: 0, \r\n            behavior: 'smooth'\r\n          })\r\n        },1000)\r\n      },[renderedSteps])\r\n    \r\n    \r\n    return (\r\n        <Box boxClass={'chatbot-main-wrap'}>\r\n            {/* header */}\r\n            <Box boxClass={'chatbot-header'}>아이 티켓</Box>\r\n\r\n            {/* chat */}\r\n            {\r\n                renderedSteps.length > 0 && renderedSteps.map((item,index) => {\r\n                    if(item.type === 'button'){\r\n                        return (\r\n                            <OptionButton\r\n                                key={index}\r\n                                options={item.options}\r\n                                onClickOptionButton={onClickOptionButton}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    if(item.type === 'question' || item.type === 'answer'){\r\n                        return (\r\n                            <Chat\r\n                                key={index}\r\n                                type={item.type}\r\n                                message={item.message}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    if(item.type === 'movie'){\r\n                        return (\r\n                            <MovieSchedule\r\n                                key={index}\r\n                                selectedDate={selectedDate}\r\n                                selectedMovieTime={selectedMovieTime}\r\n                                movieList={movieList}\r\n                                onClickDateBtn={onClickDateBtn}\r\n                                onClickMovieTimeBtn={onClickMovieTimeBtn}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    if(item.type === 'seat'){\r\n                        return (\r\n                            <SeatTable\r\n                                key={index}\r\n                                peopleNum={peopleNum}\r\n                                seatList={seatList}\r\n                                selectedSeat={selectedSeat}\r\n                                onClickPeopleNumBtn={onClickPeopleNumBtn}\r\n                                onClickSelectedSeat={onClickSelectedSeat}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    if(item.type === 'complete'){\r\n                        return (\r\n                            <ReservationDetail\r\n                                key={index}\r\n                                movieInfo={selectedMovieTime} \r\n                                seatInfo={selectedSeat}\r\n                            />\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MainView","import React from 'react'\r\nimport { Span } from '../../../Path'\r\n\r\nconst steps = [{\r\n    id: 0,\r\n    type: 'question',\r\n    message : <Span><Span spanClass={'block'}>안녕하세요! 아이티켓 챗봇입니다.</Span>무엇을 도와드릴까요?</Span>,\r\n    trigger: 1\r\n},{\r\n    id: 1,\r\n    type: 'button',\r\n    options: [\r\n        { label: '문의할래요', trigger: 2, class: 'red', callback: 'none' },\r\n        { label: '영화 예매할래요', trigger: 5, class: 'red', callback: 'none' }\r\n    ],\r\n    trigger: 'none'\r\n},{\r\n    id: 2,\r\n    type: 'question',\r\n    message : '문의할 내용을 작성해주세요.',\r\n    trigger: 3\r\n},{\r\n    id: 3,\r\n    type: 'answer',\r\n    message : '영화관 운영시간을 문의합니다.',\r\n    trigger: 4\r\n},{\r\n    id: 4,\r\n    type: 'question',\r\n    message : <Span><Span spanClass={'block'}>문의 내용이 전송되었습니다.</Span>담당자가 곧 답변을 보내드리겠습니다.</Span>,\r\n    trigger: 'none'\r\n},{\r\n    id: 5,\r\n    type: 'answer',\r\n    message : '영화 예매할래요.',\r\n    trigger: 6\r\n},{\r\n    id: 6,\r\n    type: 'question',\r\n    message : <Span><Span spanClass={'block'}>현재 상영하고 있는 영화입니다.</Span>영화를 선택해주세요.</Span>,\r\n    trigger: 7\r\n},{\r\n    id: 7,\r\n    type: 'movie',\r\n    options : '',\r\n    trigger: 8\r\n},{\r\n    id: 8,\r\n    type: 'button',\r\n    options: [\r\n        { label: '선택한 영화를 보고 싶어요!', trigger: 9, class: 'red', callback: 'delete_6' }\r\n    ],\r\n    trigger: 'none'\r\n},{\r\n    id: 9,\r\n    type: 'answer',\r\n    message : '영화 날짜',\r\n    trigger: 10\r\n},{\r\n    id: 10,\r\n    type: 'answer',\r\n    message : '영화 제목 및 시간',\r\n    trigger: 11\r\n},{\r\n    id: 11,\r\n    type: 'question',\r\n    message : '영화를 보고 싶은 인원과 좌석을 선택해주세요.',\r\n    trigger: 12\r\n},{\r\n    id: 12,\r\n    type: 'seat',\r\n    options : '',\r\n    trigger: 13\r\n},{\r\n    id: 13,\r\n    type: 'button',\r\n    options: [\r\n        { label: '다음 단계로 진행할래요', trigger: 14, class: 'red', callback: 'delete_11' },\r\n        { label: '영화를 다시 선택할래요!', trigger: 6, class: 'gray', callback: 'delete_5' }\r\n    ],\r\n    trigger: 'none'\r\n},{\r\n    id: 14,\r\n    type: 'answer',\r\n    message : '좌석과 인원 표시',\r\n    trigger: 15\r\n},{\r\n    id: 15,\r\n    type: 'question',\r\n    message : '예매가 완료되었습니다.',\r\n    trigger: 16\r\n},{\r\n    id: 16,\r\n    type: 'complete',\r\n    trigger: 'none'\r\n}]\r\n\r\nexport default steps","import MainView from \"./presenter/MainView\"\r\n\r\n// Stesp\r\nimport Steps from '../../Step'\r\n\r\nfunction MainContainer(){\r\n    return (\r\n        <>\r\n            <MainView Steps={Steps}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainContainer","import { Switch, Route, Redirect } from 'react-router-dom'\n\n// navigation\nimport { MAIN, PROJECT } from './navigation/CONSTANTS'\nimport { CHATBOT } from './navigation/CONSTANTS'\n\n// component\nimport { Main, ProjectDetail } from './Path'\nimport { Chatbot } from './Path'\n\n// css\nimport './assets/fonts/fonts.css'\nimport './commonStyle/index.css'\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Switch>\n          {/* portfolio */}\n          <Route exact path={MAIN} component={Main}/>\n          <Route exact path={PROJECT + '/:id'} component={ProjectDetail}/>\n\n          {/* chatbot */}\n          <Route exact path={CHATBOT} component={Chatbot}/>\n\n          {/* Redirect */}\n          <Redirect path=\"*\" to={MAIN}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// route\r\nexport const MAIN = '/'\r\nexport const RESUME = '/resume'\r\nexport const PROJECT = '/project'\r\n\r\n// chatbot\r\nexport const CHATBOT = '/chatbot'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './commonStyle/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}